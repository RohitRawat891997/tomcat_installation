### Apache Tomcat Installation and Configuration Notes

#### 1. **Update and Install Dependencies**
- Update system packages:
  
  dnf update -y
  
- Install Java 11 Development Environment:
  
  dnf install java-11-openjdk-devel -y
  
- Check Java version:
  ```bash
  
  java -version
  

#### 2. **Download and Extract Apache Tomcat**
- Change directory to `/opt`:
  ```bash
  
  cd /opt
  
- Download Apache Tomcat 10.1.34:
  
  wget https://dlcdn.apache.org/tomcat/tomcat-10/v10.1.34/bin/apache-tomcat-10.1.34.tar.gz
  
- Extract the downloaded Tomcat archive:
  
  tar -xzvf apache-tomcat-10.1.34.tar.gz
  
- Rename the extracted folder:
  
  mv apache-tomcat-10.1.34 tomcat
  

#### 3. **Set CATALINA_HOME Environment Variable**
- Set `CATALINA_HOME` environment variable in system-wide profile:
  
  echo 'export CATALINA_HOME=/opt/tomcat' | sudo tee -a /etc/profile.d/tomcat.sh
  
- Source the environment variable:
  
  source /etc/profile.d/tomcat.sh
  

#### 4. **Create Tomcat User**
- Create a dedicated `tomcat` user:
  
  useradd -r -m -U -d /opt/tomcat -s /bin/false tomcat
  
- Change ownership of `/opt/tomcat` directory to `tomcat` user:
  
  chown -R tomcat: /opt/tomcat
  

#### 5. **Create and Configure Systemd Service**
- Create and edit the systemd service for Tomcat:
  
  vim /etc/systemd/system/tomcat.service
  

- Add the following service configuration:
  
  [Unit]
  Description=Apache Tomcat Web Application Container
  After=network.target

  [Service]
  Type=forking

  Environment=JAVA_HOME=/usr/lib/jvm/jre-openjdk
  Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid
  Environment=CATALINA_HOME=/opt/tomcat
  Environment=CATALINA_BASE=/opt/tomcat
  Environment='CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'
  Environment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'

  ExecStart=/opt/tomcat/bin/startup.sh
  ExecStop=/opt/tomcat/bin/shutdown.sh

  User=tomcat
  Group=tomcat
  UMask=0007
  RestartSec=10
  Restart=always

  [Install]
  WantedBy=multi-user.target
  
- Save and quit (`:wq!`).

#### 6. **Start and Enable Tomcat Service**
- Reload systemd to apply the new service:
  
  systemctl daemon-reload
  
- Start Tomcat:
  
  systemctl start tomcat
  
- Enable Tomcat to start on boot:
  
  systemctl enable tomcat
 
- Check the status of the Tomcat service:
  
  systemctl status tomcat
  

#### 7. **Configure Firewall**
- Open port 8080 in the firewall:
  
  firewall-cmd --permanent --zone=public --add-port=8080/tcp
  
- Reload firewall:
  
  firewall-cmd --reload
  

#### 8. **Set Tomcat Manager User Roles**
- Edit `tomcat-users.xml` to add user roles:
  
  vim /opt/tomcat/conf/tomcat-users.xml
  
- Add the following lines:
  
  <role rolename="manager-gui"/>
  <role rolename="admin-gui"/>
  <user username="admin" password="your_password" roles="manager-gui,admin-gui"/>
  
- Save and quit (`:wq!`).

#### 9. **Restrict Tomcat Manager Access**
- Edit `context.xml` to restrict access to the Tomcat Manager:

  vim /opt/tomcat/webapps/manager/META-INF/context.xml
  
- Comment out or remove the following lines:
  
  <Valve className="org.apache.catalina.valves.RemoteAddrValve"
        allow="127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1" />
  
- Replace with:

  <Valve className="org.apache.catalina.valves.RemoteAddrValve"
        allow="192\.168\.1\.10" />
  
- Save and quit (`:wq!`).

#### 10. **Restart Tomcat Service**
- Restart Tomcat to apply the changes:
  
  systemctl restart tomcat
  

#### 11. **Adjust SELinux Policies**
- Temporarily disable SELinux enforcing mode:
  
  setenforce 0
  
- Allow HTTPD to make network connections:
  
  sudo setsebool -P httpd_can_network_connect 1
  
- Re-enable SELinux enforcing mode:
  
  setenforce 1
  

---

These steps will install and configure Apache Tomcat 10 on your system with Java 11, set up necessary user roles for Tomcat's management interface, and configure firewall and SELinux settings for secure operation.